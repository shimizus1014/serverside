MVCモデルとは

 MVCモデルとは、GUIアプリケーションのための模範的な構造です。
 
 MVCモデルは、アプリケーションを、
 ・Model   処理やデータ
 ・View    画面出力
 ・Controller 要求を受け取り、Model,Viewに依頼、クライアントに結果を返す。
 に分けて開発することを定めたものです。
 各要素は担当する役割が決められており他の要素の役割は担いません。
 
 これらを、サーブレットクラス、jspファイルを使い分けて担当分けしていく考え方です。


それぞれの担当関係

  Controller
    ・ユーザーからのリクエストを受けて全体の制御を行うコントローラは、
      サーブレットクラスが担当します。コントローラには、複雑な制御や
      例外処理が求められます。そのような処理はJavaが主体のサーブレットクラス
      のほうが求められます。
  
  Model
    ・ユーザの要求（検索等）にこたえる処理や、その処理に関係するデータを
    表すモデルは、一般的なJavaのクラスが担当します。
    HttpServletRequestのようなWeb関連のクラスやインタフェースを含まない
    クラスのことです。
  
  View
    ・出力を行うビューは、HTMLの出力を得意とするJSPファイルが担当します

処理の転送

  MVCモデルで開発する場合コントローラのサーブレットクラスがビューの
  JSPファイルに処理結果の表示を依頼する必要があります。
  しかし、JSPファイルをnewしてインスタンス化することはできません
  これを解決するのがフォワードです。
  
フォワードとは

  処理を他のサーブレットクラスやJSPファイルに移すこと。
  
フォワードの方法
  
  フォワードは、RequestDispatcherインスタンスのforward()メソッドで行います。
  
  フォワードの構文
    RequestDispatcher dispatcher=
      request.getRequestDispatcher("フォワード先");
    dispatcher.forwrd(request,response);
    ※javax.servlet.RequestDispatcherをインポートする必要がある。
  
  フォワード先の指定方法
  
  ・JSPファイルの場合       → /WebContentからのパス
  ・サーブレットクラスの場合→ /URLパターン
  ※フォワード先は同じWebアプリケーションでないとならない。

JSPファイルへの直接リクエストを禁止する
  
  MVCモデルにおいて、JSPファイルは、ブラウザから直接リクエストを受けた場合、
  エラーを起こす可能性が高い。
  リクエストを制限する方法として、WEB-INFディレクトリ以下に配置する
  方法があります。
  ブラウザは、このディレクトリ以下に配置されているファイルを
  直接リクエストすることはできません。

処理の転送（2）

  処理を別の処理へ転送する方法はフォワードだけではありません。もう1つ、
  リダイレクトという方法があります。リダイレクトはブラウザのリクエスト先を
  変更して処理の転送を行います。
  
  リダイレクトの方法
    リダイレクトはHtpServletResponseインスタンスのsendRedirect()メソッドで行います。
    
  リダイレクトの構文
    response.sendRedirect("リダイレクト先のURL");
    ※リダイレクト先は、ブラウザがリクエストできる先であればどこでも可。
    
  リダイレクト先の指定方法
    リダイレクト先はURLでしていします。ただし、リダイレクト先が同じ
    アプリケーションサーバにある場合は、
    アプリケーション名/URLパターン又はWebContentからのパス
    で指定することができます。

フォワードとリダイレクトの違い

  フォワード
    ・同じアプリケーション内のサーブレットクラスやJSPファイルに処理を移す。
    ・リクエスト/レスポンスは1往復する。
    ・URLはリクエスト時のまま。
  リダイレクト
    ・ブラウザに別のサーブレットクラスやJSPファイルをリクエストさせ、実行し直す
    ・URLはリダイレクト先のURLに変更。